---
services:
  angular-frontend:
    container_name: angular_frontend
    image: angular_frontend
    build:
      context: AngularFrontend
    ports:
      - "8080:80"

  web-api:
    container_name: web_api
    image: web_api
    build:
      context: WebAPI
    ports:
      - "8081:8080"
    environment:
      ConnectionStrings__RabbitMq: "amqp://guest:guest@rabbit_mq:5672/"
      ConnectionStrings__TheButton: "User ID=postgres;Password=Rabarbar123;Host=postgres;Port=5432;Database=TheButton;Pooling=true;"
    depends_on:
      - rabbitmq

  functions-worker:
    container_name: functions_worker
    image: functions_worker
    build:
      context: FunctionsWorker
    environment:
      ConnectionStrings__RabbitMq: "amqp://guest:guest@rabbit_mq:5672/"
      SmtpOptions__Server: "smtp.gmail.com"
      SmtpOptions__FromAddress: ""
      SmtpOptions__Password: ""
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbit_mq
    user: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: rabbitmq-diagnostics -q check_running
      interval: 5s
      timeout: 30s
      retries: 10

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "Rabarbar123"


volumes:
  postgres-data:
  rabbitmq-data:
